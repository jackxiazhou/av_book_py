# Generated by Django 4.2.7 on 2025-07-20 13:43

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CrawlerSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="任务名称")),
                (
                    "crawler_type",
                    models.CharField(
                        choices=[
                            ("avmoo", "AVMoo"),
                            ("javlibrary", "JAVLibrary"),
                            ("javbus", "JAVBus"),
                        ],
                        max_length=20,
                        verbose_name="爬虫类型",
                    ),
                ),
                (
                    "schedule_type",
                    models.CharField(
                        choices=[
                            ("once", "单次"),
                            ("daily", "每日"),
                            ("weekly", "每周"),
                            ("monthly", "每月"),
                        ],
                        max_length=10,
                        verbose_name="调度类型",
                    ),
                ),
                ("pages", models.IntegerField(default=5, verbose_name="页数")),
                ("max_movies", models.IntegerField(default=50, verbose_name="最大影片数")),
                ("delay_seconds", models.IntegerField(default=3, verbose_name="延迟秒数")),
                (
                    "proxy_url",
                    models.CharField(blank=True, max_length=200, verbose_name="代理URL"),
                ),
                ("scheduled_time", models.TimeField(verbose_name="调度时间")),
                ("next_run", models.DateTimeField(verbose_name="下次运行时间")),
                (
                    "last_run",
                    models.DateTimeField(blank=True, null=True, verbose_name="上次运行时间"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否激活")),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
            ],
            options={
                "verbose_name": "爬虫定时任务",
                "verbose_name_plural": "爬虫定时任务",
                "db_table": "crawler_schedules",
                "ordering": ["next_run"],
            },
        ),
        migrations.CreateModel(
            name="CrawlerSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(max_length=50, unique=True, verbose_name="会话ID"),
                ),
                (
                    "crawler_type",
                    models.CharField(
                        choices=[
                            ("avmoo", "AVMoo"),
                            ("javlibrary", "JAVLibrary"),
                            ("javbus", "JAVBus"),
                        ],
                        max_length=20,
                        verbose_name="爬虫类型",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("running", "运行中"),
                            ("paused", "暂停"),
                            ("completed", "已完成"),
                            ("failed", "失败"),
                            ("cancelled", "已取消"),
                        ],
                        default="running",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                ("total_pages", models.IntegerField(default=1, verbose_name="总页数")),
                ("max_movies", models.IntegerField(default=10, verbose_name="最大影片数")),
                ("delay_seconds", models.IntegerField(default=3, verbose_name="延迟秒数")),
                (
                    "proxy_url",
                    models.CharField(blank=True, max_length=200, verbose_name="代理URL"),
                ),
                ("current_page", models.IntegerField(default=1, verbose_name="当前页数")),
                (
                    "processed_movies",
                    models.IntegerField(default=0, verbose_name="已处理影片数"),
                ),
                (
                    "created_movies",
                    models.IntegerField(default=0, verbose_name="已创建影片数"),
                ),
                (
                    "processed_urls",
                    models.TextField(
                        blank=True, help_text="JSON格式存储已处理的URL", verbose_name="已处理URL列表"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="开始时间"
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(auto_now=True, verbose_name="最后活动时间"),
                ),
                (
                    "completed_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="完成时间"),
                ),
                ("error_message", models.TextField(blank=True, verbose_name="错误信息")),
                ("error_count", models.IntegerField(default=0, verbose_name="错误次数")),
            ],
            options={
                "verbose_name": "爬虫会话",
                "verbose_name_plural": "爬虫会话",
                "db_table": "crawler_sessions",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="CrawlerLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("debug", "Debug"),
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        default="info",
                        max_length=10,
                        verbose_name="日志级别",
                    ),
                ),
                ("message", models.TextField(verbose_name="日志消息")),
                ("url", models.URLField(blank=True, verbose_name="相关URL")),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="crawler.crawlersession",
                        verbose_name="爬虫会话",
                    ),
                ),
            ],
            options={
                "verbose_name": "爬虫日志",
                "verbose_name_plural": "爬虫日志",
                "db_table": "crawler_logs",
                "ordering": ["-created_at"],
            },
        ),
    ]
