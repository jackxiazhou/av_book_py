# Generated by Django 4.2.7 on 2025-07-20 07:20

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("movies", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MagnetLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "magnet_name",
                    models.TextField(help_text="磁力链接的文件名或描述", verbose_name="磁力名称"),
                ),
                (
                    "magnet_link",
                    models.TextField(
                        help_text="完整的磁力链接",
                        validators=[
                            django.core.validators.RegexValidator(
                                message="磁力链接格式不正确",
                                regex="^magnet:\\?xt=urn:btih:[a-fA-F0-9]{40}",
                            )
                        ],
                        verbose_name="磁力链接",
                    ),
                ),
                (
                    "file_size",
                    models.CharField(
                        blank=True,
                        help_text="如: 1.5GB",
                        max_length=20,
                        verbose_name="文件大小",
                    ),
                ),
                (
                    "file_size_bytes",
                    models.BigIntegerField(
                        blank=True,
                        help_text="文件大小的字节数",
                        null=True,
                        verbose_name="文件大小(字节)",
                    ),
                ),
                (
                    "quality",
                    models.CharField(
                        choices=[
                            ("sd", "标清"),
                            ("hd", "高清"),
                            ("fhd", "全高清"),
                            ("uhd", "超高清"),
                            ("unknown", "未知"),
                        ],
                        default="unknown",
                        max_length=10,
                        verbose_name="视频质量",
                    ),
                ),
                (
                    "has_subtitle",
                    models.BooleanField(default=False, verbose_name="是否有字幕"),
                ),
                (
                    "subtitle_language",
                    models.CharField(
                        blank=True,
                        help_text="如: 中文, 英文, 日文",
                        max_length=50,
                        verbose_name="字幕语言",
                    ),
                ),
                ("seeders", models.PositiveIntegerField(default=0, verbose_name="做种数")),
                (
                    "leechers",
                    models.PositiveIntegerField(default=0, verbose_name="下载数"),
                ),
                (
                    "completed",
                    models.PositiveIntegerField(default=0, verbose_name="完成数"),
                ),
                (
                    "publish_date",
                    models.DateField(blank=True, null=True, verbose_name="发布日期"),
                ),
                (
                    "uploader",
                    models.CharField(blank=True, max_length=100, verbose_name="上传者"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否有效")),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="是否已验证"),
                ),
                (
                    "last_checked",
                    models.DateTimeField(blank=True, null=True, verbose_name="最后检查时间"),
                ),
                (
                    "download_count",
                    models.PositiveIntegerField(default=0, verbose_name="下载次数"),
                ),
                (
                    "click_count",
                    models.PositiveIntegerField(default=0, verbose_name="点击次数"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="magnets",
                        to="movies.movie",
                        verbose_name="关联影片",
                    ),
                ),
            ],
            options={
                "verbose_name": "磁力链接",
                "verbose_name_plural": "磁力链接",
                "db_table": "magnet_links",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MagnetCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, unique=True, verbose_name="分类名称"),
                ),
                ("description", models.TextField(blank=True, verbose_name="分类描述")),
                (
                    "color",
                    models.CharField(
                        default="#28a745", max_length=7, verbose_name="分类颜色"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                (
                    "magnets",
                    models.ManyToManyField(
                        blank=True,
                        related_name="categories",
                        to="magnets.magnetlink",
                        verbose_name="关联磁力链接",
                    ),
                ),
            ],
            options={
                "verbose_name": "磁力分类",
                "verbose_name_plural": "磁力分类",
                "db_table": "magnet_categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DownloadHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(verbose_name="IP地址")),
                ("user_agent", models.TextField(blank=True, verbose_name="用户代理")),
                (
                    "download_time",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="下载时间"
                    ),
                ),
                (
                    "magnet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="download_history",
                        to="magnets.magnetlink",
                        verbose_name="磁力链接",
                    ),
                ),
            ],
            options={
                "verbose_name": "下载历史",
                "verbose_name_plural": "下载历史",
                "db_table": "download_history",
                "ordering": ["-download_time"],
            },
        ),
        migrations.AddIndex(
            model_name="magnetlink",
            index=models.Index(fields=["movie"], name="magnet_link_movie_i_e1e706_idx"),
        ),
        migrations.AddIndex(
            model_name="magnetlink",
            index=models.Index(
                fields=["quality"], name="magnet_link_quality_73a65d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="magnetlink",
            index=models.Index(
                fields=["has_subtitle"], name="magnet_link_has_sub_6ec297_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="magnetlink",
            index=models.Index(
                fields=["is_active"], name="magnet_link_is_acti_9793f5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="magnetlink",
            index=models.Index(
                fields=["seeders"], name="magnet_link_seeders_e90301_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="magnetlink",
            index=models.Index(
                fields=["created_at"], name="magnet_link_created_654a86_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="magnetlink",
            unique_together={("movie", "magnet_link")},
        ),
        migrations.AddIndex(
            model_name="downloadhistory",
            index=models.Index(
                fields=["magnet"], name="download_hi_magnet__113c9f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="downloadhistory",
            index=models.Index(
                fields=["download_time"], name="download_hi_downloa_38142c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="downloadhistory",
            index=models.Index(
                fields=["ip_address"], name="download_hi_ip_addr_333536_idx"
            ),
        ),
    ]
